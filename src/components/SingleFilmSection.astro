---
import '../styles/variables.css';

let {
  title,
  portraitImage,
  description1,
  description2,
  videoId,
  assetsLoad,
  filmSide,
  backgroundColor,
  textColor,
  borderColor,
} = Astro.props;
const isVideoLeft = filmSide === "left";
---

<section
  class="section-film"
  style={`background: ${backgroundColor ?? "#555"}; color: ${textColor ?? "#fff"} ; border: 1px solid ${borderColor ?? "#555"};`}
>
  <h2>{title}</h2>
  <div class={`content-columns ${filmSide ? "video-left" : "video-right"}`}>
    {
      isVideoLeft ? (
        <>
          <div class="embeded-video">
            <iframe
              width="560"
              height="315"
              src={"https://drive.google.com/file/d/"+videoId+"/preview"}
              title="Video player"
              frameborder="0"
              allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
              allowfullscreen
              loading={assetsLoad}
            />
          </div>
          <div class="description">
            <p>{description1}</p>
            <p>{description2}</p>
          </div>
          <div class="portrait-imagge">
            <img src={portraitImage} loading={assetsLoad} alt="Portrait" />
          </div>
        </>
      ) : (
        <>
          <div class="portrait-imagge">
            <img src={portraitImage} loading={assetsLoad} alt="Portrait" />
          </div>
          <div class="description">
            <p>{description1}</p>
            <p>{description2}</p>
          </div>
          <div class="embeded-video">
            <iframe
              width="560"
              height="315"
              src={"https://drive.google.com/file/d/"+videoId+"/preview"}
              title="Video player"
              frameborder="0"
              allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
              allowfullscreen
              loading={assetsLoad}
            />
          </div>
        </>
      )
    }
  </div>
</section>

<style>
  .section-film {
    padding: 10px 40px;
    padding-bottom: 30px;
    max-width: var(--maxWidth);
    margin: 20px auto;
    border-radius: 8px;
  }

  .section-film .content-columns {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    gap: 20px;
    align-items: flex-start;
  }

  .section-film .content-columns .portrait-imagge {
    text-align: center;
    width: 200px;
    flex-shrink: 0; /* Prevent shrinking */
  }

  .section-film .content-columns .portrait-imagge img {
    max-width: 100%;
    height: 100%;
    height: 315px;
    border-radius: 8px;
  }

  .section-film .content-columns .description {
    flex: 1;
    min-width: 0;
    overflow-wrap: break-word;
    height: 315px;
    line-height: 1.6;
  }

  .section-film .content-columns .embeded-video {
    width: 560px;
    max-width: 100%;
    flex-shrink: 0;
  }

  .section-film .content-columns .embeded-video iframe {
    width: 100%;
    height: 315px;
    border-radius: 8px;
  }

  /* If media screen is less than 768px, stack the columns */
  @media (max-width: 768px) {
    .section-film {
      border-radius: 0;
    }

    .section-film .content-columns {
      display: block;
    }

    .section-film .content-columns .portrait-imagge {
      display: none;
    }

    .section-film .content-columns .description {
      height: min-content;
      margin-bottom: 15px;
    }

    .section-film .content-columns .embeded-video {
      width: auto;
      text-align: center;
    }
  }
</style>